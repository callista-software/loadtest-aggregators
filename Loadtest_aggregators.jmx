<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.5" jmeter="2.10 r1533061">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="xBASE_URL" elementType="Argument">
            <stringProp name="Argument.name">xBASE_URL</stringProp>
            <stringProp name="Argument.value">https://qa.esb.ntjp.se/vp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xGET_CARE_CONTACTS_PATH" elementType="Argument">
            <stringProp name="Argument.name">xGET_CARE_CONTACTS_PATH</stringProp>
            <stringProp name="Argument.value">/clinicalprocess/logistics/logistics/GetCareContacts/2/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xGET_CARE_DOCUMENTATION_PATH" elementType="Argument">
            <stringProp name="Argument.name">xGET_CARE_DOCUMENTATION_PATH</stringProp>
            <stringProp name="Argument.value">/clinicalprocess/healthcond/description/GetCareDocumentation/2/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xGET_MATERNITY_MEDICAL_HISTORY_PATH" elementType="Argument">
            <stringProp name="Argument.name">xGET_MATERNITY_MEDICAL_HISTORY_PATH</stringProp>
            <stringProp name="Argument.value">/clinicalprocess/healthcond/actoutcome/GetMaternityMedicalHistory/2/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xGET_VACCINATION_HISTORY_PATH" elementType="Argument">
            <stringProp name="Argument.name">xGET_VACCINATION_HISTORY_PATH</stringProp>
            <stringProp name="Argument.value">/clinicalprocess/activityprescription/actoutcome/GetVaccinationHistory/1/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xLOGICAL_ADDRESS" elementType="Argument">
            <stringProp name="Argument.name">xLOGICAL_ADDRESS</stringProp>
            <stringProp name="Argument.value">5565594230</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOADTEST_DURATIONTIME_SEC" elementType="Argument">
            <stringProp name="Argument.name">LOADTEST_DURATIONTIME_SEC</stringProp>
            <stringProp name="Argument.value">60</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ROBUSTNESSTEST_DURATIONTIME_SEC" elementType="Argument">
            <stringProp name="Argument.name">ROBUSTNESSTEST_DURATIONTIME_SEC</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NO_OF_THREADS" elementType="Argument">
            <stringProp name="Argument.name">NO_OF_THREADS</stringProp>
            <stringProp name="Argument.value">50</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMP_UP_PERIOD_SEC" elementType="Argument">
            <stringProp name="Argument.name">RAMP_UP_PERIOD_SEC</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">https://tptest.callistasoftware.org:20000/vp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GET_CARE_CONTACTS_PATH" elementType="Argument">
            <stringProp name="Argument.name">GET_CARE_CONTACTS_PATH</stringProp>
            <stringProp name="Argument.value">/GetCareContacts/2/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GET_CARE_DOCUMENTATION_PATH" elementType="Argument">
            <stringProp name="Argument.name">GET_CARE_DOCUMENTATION_PATH</stringProp>
            <stringProp name="Argument.value">/GetCareDocumentation/2/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GET_MATERNITY_MEDICAL_HISTORY_PATH" elementType="Argument">
            <stringProp name="Argument.name">GET_MATERNITY_MEDICAL_HISTORY_PATH</stringProp>
            <stringProp name="Argument.value">/GetMaternityMedicalHistory/2/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GET_VACCINATION_HISTORY_PATH" elementType="Argument">
            <stringProp name="Argument.name">GET_VACCINATION_HISTORY_PATH</stringProp>
            <stringProp name="Argument.value">/GetVaccinationHistory/1/rivtabp21</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOGICAL_ADDRESS" elementType="Argument">
            <stringProp name="Argument.name">LOGICAL_ADDRESS</stringProp>
            <stringProp name="Argument.value">agg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TIMESTAMP" elementType="Argument">
            <stringProp name="Argument.name">TIMESTAMP</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMddhhmmssSSS)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Users" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">users.csv</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">patientId,patientIdType</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load - GetCareContacts" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NO_OF_THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP_PERIOD_SEC}</stringProp>
        <longProp name="ThreadGroup.start_time">1385110620000</longProp>
        <longProp name="ThreadGroup.end_time">1385110620000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${LOADTEST_DURATIONTIME_SEC}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="RunGetCareContacts" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1283890892">Shared Modules</stringProp>
            <stringProp name="-1402880153">Modules</stringProp>
            <stringProp name="-1281627942">GetCareContacts</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load - GetCareDocumentation" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NO_OF_THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP_PERIOD_SEC}</stringProp>
        <longProp name="ThreadGroup.start_time">1385103976000</longProp>
        <longProp name="ThreadGroup.end_time">1385103976000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${LOADTEST_DURATIONTIME_SEC}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="RunGetCareDocumentation" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1283890892">Shared Modules</stringProp>
            <stringProp name="-1402880153">Modules</stringProp>
            <stringProp name="-1218275693">GetCareDocumentation</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load - GetMaternityMedicalHistory" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NO_OF_THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP_PERIOD_SEC}</stringProp>
        <longProp name="ThreadGroup.start_time">1385104074000</longProp>
        <longProp name="ThreadGroup.end_time">1385104074000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${LOADTEST_DURATIONTIME_SEC}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="RunGetMaternityMedicalHistory" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1283890892">Shared Modules</stringProp>
            <stringProp name="-1402880153">Modules</stringProp>
            <stringProp name="1043769114">GetMaternityMedicalHistory</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load - GetVaccinationHistory" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NO_OF_THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP_PERIOD_SEC}</stringProp>
        <longProp name="ThreadGroup.start_time">1385104108000</longProp>
        <longProp name="ThreadGroup.end_time">1385104108000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${LOADTEST_DURATIONTIME_SEC}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="RunGetVaccinationHistory" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="-1227702913">WorkBench</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="1283890892">Shared Modules</stringProp>
            <stringProp name="-1402880153">Modules</stringProp>
            <stringProp name="-497655707">GetVaccinationHistory</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Robustness" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NO_OF_THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP_PERIOD_SEC}</stringProp>
        <longProp name="ThreadGroup.start_time">1385104173000</longProp>
        <longProp name="ThreadGroup.end_time">1385104173000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${ROBUSTNESSTEST_DURATIONTIME_SEC}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="Random Order Controller" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GetCareContacts" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="1283890892">Shared Modules</stringProp>
              <stringProp name="-1402880153">Modules</stringProp>
              <stringProp name="-1281627942">GetCareContacts</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GetCareDocumnetation" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="1283890892">Shared Modules</stringProp>
              <stringProp name="-1402880153">Modules</stringProp>
              <stringProp name="-1218275693">GetCareDocumentation</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GetMaternityMedicalHistory" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="1283890892">Shared Modules</stringProp>
              <stringProp name="-1402880153">Modules</stringProp>
              <stringProp name="1043769114">GetMaternityMedicalHistory</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="GetVaccinationHistory" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="1283890892">Shared Modules</stringProp>
              <stringProp name="-1402880153">Modules</stringProp>
              <stringProp name="-497655707">GetVaccinationHistory</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Failed Responses to file" enabled="true">
        <stringProp name="FileSaver.filename">~/FailedResponsesLog_${TIMESTAMP}-${__threadNum}</stringProp>
        <boolProp name="FileSaver.errorsonly">true</boolProp>
        <boolProp name="FileSaver.skipautonumber">false</boolProp>
        <boolProp name="FileSaver.skipsuffix">false</boolProp>
        <boolProp name="FileSaver.successonly">false</boolProp>
      </ResultSaver>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Shared Modules" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1385104727000</longProp>
        <longProp name="ThreadGroup.end_time">1385104727000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Modules" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GetCareContacts" enabled="true"/>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="GetCareContacts" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">${BASE_URL}${GET_CARE_CONTACTS_PATH}</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:riv:itintegration:registry:1&quot; xmlns:urn1=&quot;urn:riv:clinicalprocess:logistics:logistics:GetCareContactsResponder:2&quot; xmlns:urn2=&quot;urn:riv:clinicalprocess:logistics:logistics:2&quot;&gt;
   &lt;soapenv:Header&gt;
      &lt;urn:LogicalAddress&gt;${LOGICAL_ADDRESS}&lt;/urn:LogicalAddress&gt;
   &lt;/soapenv:Header&gt;
   &lt;soapenv:Body&gt;
      &lt;urn1:GetCareContacts&gt;
         &lt;urn1:patientId&gt;
            &lt;urn2:id&gt;${patientId}&lt;/urn2:id&gt;
            &lt;urn2:type&gt;${patientIdType}&lt;/urn2:type&gt;
         &lt;/urn1:patientId&gt;
      &lt;/urn1:GetCareContacts&gt;
    &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION">urn:riv:ehr:patientsummary:GetCareContactsResponder:2:GetCareContacts</stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="false">
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">//ProcessingStatusList/statusCode[text()=&apos;NoDataSynchFailed&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GetCareDocumentation" enabled="true"/>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="GetCareDocumentation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">${BASE_URL}${GET_CARE_DOCUMENTATION_PATH}</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:riv:itintegration:registry:1&quot; xmlns:urn1=&quot;urn:riv:clinicalprocess:healthcond:description:GetCareDocumentationResponder:2&quot; xmlns:urn2=&quot;urn:riv:clinicalprocess:healthcond:description:2&quot;&gt;
   &lt;soapenv:Header&gt;
      &lt;urn:LogicalAddress&gt;${LOGICAL_ADDRESS}&lt;/urn:LogicalAddress&gt;
   &lt;/soapenv:Header&gt;
   &lt;soapenv:Body&gt;
      &lt;urn1:GetCareDocumentation&gt;
         &lt;!--Zero or more repetitions:--&gt;
&lt;!--
         &lt;urn1:careUnitHSAid&gt;?&lt;/urn1:careUnitHSAid&gt;
--&gt;
         &lt;urn1:patientId&gt;
            &lt;urn2:id&gt;${patientId}&lt;/urn2:id&gt;
            &lt;urn2:type&gt;${patientIdType}&lt;/urn2:type&gt;
         &lt;/urn1:patientId&gt;
         &lt;!--Optional:--&gt;
&lt;!--
         &lt;urn1:timePeriod&gt;
            &lt;urn2:start&gt;?&lt;/urn2:start&gt;
            &lt;urn2:end&gt;?&lt;/urn2:end&gt;
         &lt;/urn1:timePeriod&gt;
--&gt;
         &lt;!--Optional:--&gt;
&lt;!--
         &lt;urn1:sourceSystem&gt;?&lt;/urn1:sourceSystem&gt;
--&gt;
         &lt;!--Zero or more repetitions:--&gt;
&lt;!--
         &lt;urn1:careContactId&gt;?&lt;/urn1:careContactId&gt;
--&gt;
         &lt;!--You may enter ANY elements at this point--&gt;
      &lt;/urn1:GetCareDocumentation&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION">urn:riv:clinicalprocess:healthcond:description:GetCareDocumentationResponder:2:GetCareDocumentation</stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="false">
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">//ProcessingStatusList/statusCode[text()=&apos;NoDataSynchFailed&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GetMaternityMedicalHistory" enabled="true"/>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="GetMaternityMedicalHistory" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">${BASE_URL}${GET_MATERNITY_MEDICAL_HISTORY_PATH}</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:riv:itintegration:registry:1&quot; xmlns:urn1=&quot;urn:riv:clinicalprocess:healthcond:actoutcome:GetMaternityMedicalHistoryResponder:2&quot; xmlns:urn2=&quot;urn:riv:clinicalprocess:healthcond:actoutcome:2&quot;&gt;
   &lt;soapenv:Header&gt;
      &lt;urn:LogicalAddress&gt;${LOGICAL_ADDRESS}&lt;/urn:LogicalAddress&gt;
   &lt;/soapenv:Header&gt;
   &lt;soapenv:Body&gt;
      &lt;urn1:GetMaternityMedicalHistory&gt;
         &lt;urn1:patientId&gt;
            &lt;urn2:id&gt;${patientId}&lt;/urn2:id&gt;
            &lt;urn2:type&gt;${patientIdType}&lt;/urn2:type&gt;
         &lt;/urn1:patientId&gt;
         &lt;urn1:timePeriod&gt;
            &lt;urn2:start&gt;20110101&lt;/urn2:start&gt;
            &lt;urn2:end&gt;20131220&lt;/urn2:end&gt;
         &lt;/urn1:timePeriod&gt;
      &lt;/urn1:GetMaternityMedicalHistory&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION">urn:riv:clinicalprocess:healthcond:actoutcome:GetMaternityMedicalHistoryResponder:2:GetMaternityMedicalHistory</stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="false">
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">//ProcessingStatusList/statusCode[text()=&apos;NoDataSynchFailed&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GetVaccinationHistory" enabled="true"/>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="GetVaccinationHistory" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">${BASE_URL}${GET_VACCINATION_HISTORY_PATH}</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:riv:itintegration:registry:1&quot; xmlns:urn1=&quot;urn:riv:clinicalprocess:activityprescription:actoutcome:GetVaccinationHistoryResponder:1&quot; xmlns:urn2=&quot;urn:riv:clinicalprocess:activityprescription:actoutcome:1&quot;&gt;
   &lt;soapenv:Header&gt;
      &lt;urn:LogicalAddress&gt;${LOGICAL_ADDRESS}&lt;/urn:LogicalAddress&gt;
   &lt;/soapenv:Header&gt;
   &lt;soapenv:Body&gt;
      &lt;urn1:GetVaccinationHistory&gt;
         &lt;urn1:patientId&gt;
            &lt;urn2:id&gt;${patientId}&lt;/urn2:id&gt;
            &lt;urn2:type&gt;${patientIdType}&lt;/urn2:type&gt;
         &lt;/urn1:patientId&gt;
      &lt;/urn1:GetVaccinationHistory&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION">urn:riv:clinicalprocess:activityprescription:actoutcome:GetVaccinationHistoryResponder:2:GetVaccinationHistory</stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="false">
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">//ProcessingStatusList/statusCode[text()=&apos;NoDataSynchFailed&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">false</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Archive" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1385365541000</longProp>
        <longProp name="ThreadGroup.end_time">1385365541000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
